import { NavLink, Outlet } from "react-router-dom";
import "./styles.css";
import { useState, useContext } from "react";
import AppContext from "../context/Appcontext";

interface route {
  name: string;
  to: string;
}

const routes: route[] = [
  {
    name: "Home",
    to: "/portfolio/",
  },
  {
    name: "Skills",
    to: "/portfolio/skills",
  },
  {
    name: "About",
    to: "/portfolio/about",
  },
  {
    name: "Projects",
    to: "/portfolio/projects",
  },
  {
    name: "Contact",
    to: "/portfolio/contact",
  },
];

export const Navbar = () => {
  const { showNavbar } = useContext(AppContext);

  const [isOpen, setIsOpen] = useState<boolean>(false);

  const openNavbar = () => {
    setIsOpen(!isOpen);
  };

  return (
    <>
      <header className={`header ${showNavbar ? "navbarShow" : ""}`}>
        <div className="header-container">
          <div>
            <svg
              id="logo"
              xmlns="http://www.w3.org/2000/svg"
              version="1.0"
              viewBox="0 0 200 200"
              height={50}
              width={50}
            >
              <g fill="CurrentColor">
                <path d="M77.715.354C69.39 2.63 61.815 5.64 54.402 9.612c-13.538 7.26-25.539 17.538-34.618 29.652C5.778 57.95-1.153 80.729.162 103.772c1.236 21.666 9.607 42.174 24.044 58.916a107.356 107.356 0 0012.255 12.056c9.117 7.608 19.41 13.631 30.605 17.908 14.491 5.535 30.196 8 45.86 7.194 13.468-.695 26.506-3.744 38.776-9.064 1.468-.638 4.764-2.2 6.181-2.926 16.557-8.51 30.526-21.04 40.397-36.234.648-.994 1.74-2.763 1.717-2.78-.009-.01-.472.268-1.027.615-12.867 8.048-27.447 13.086-42.846 14.81-2.496.282-6.561.577-7.945.577h-.376l-.138-.167c-.477-.563-1.598-1.188-2.677-1.483-.967-.264-2.435-.405-3.542-.339-.342.022-.638.031-.657.013-.046-.044-.306-1.293-.384-1.896-.102-.74-.148-2.01-.107-3.067.102-2.82.852-6.2 2.232-10.067.935-2.636 1.815-4.695 4.056-9.548 1.38-2.988 1.861-4.145 2.065-4.972.078-.308.088-.537.088-1.826-.005-.81-.028-1.83-.06-2.266-.209-2.78-.565-6.305-1.325-13.046-1.403-12.417-1.824-16.914-2.018-21.45a33.413 33.413 0 00-.098-1.54c-.287-2.556-1.365-5.337-3.18-8.184-2.274-3.564-5.686-7.19-9.524-10.12-3.26-2.486-6.26-4.035-8.033-4.145-.82-.048-1.167.137-1.537.805-.255.458-.33.814-.301 1.404.041.836.213 1.307 1.166 3.212.338.678.686 1.421.778 1.65.62 1.584.547 2.776-.24 3.806-.093.119-.477.528-.857.902-2.167 2.138-2.973 3.181-5.616 7.282-.408.63-1 1.531-1.32 2.002-.755 1.118-1.046 1.615-1.329 2.27-1.185 2.733-.38 4.889 2.385 6.402 2.199 1.206 5.922 2.033 10.033 2.236.426.022.787.048.796.057.014.013-.074.088-.199.171-.12.08-.81.581-1.537 1.114-7.477 5.469-13.14 10.291-15.714 13.38-1.273 1.531-2.278 3.344-4.195 7.568-2.338 5.166-3.236 6.776-5.098 9.152-3.384 4.325-5.495 10.111-6.384 17.486-.051.422-.098.774-.107.783-.055.053-3.278-1.826-5.218-3.04-1.653-1.039-4.255-2.773-4.329-2.887-.01-.018.051-.286.139-.598.472-1.694 1.028-3.09 2.084-5.232 1.222-2.477 2.115-4.558 2.94-6.864 2.935-8.206 3.532-15.26 1.61-18.92-.592-1.122-1.48-2.006-2.513-2.495-1.491-.713-3.385-.787-5.723-.233-2.162.515-3.301 1.087-3.727 1.879-.167.308-.204.823-.088 1.201.306 1.008 1.2 1.976 3.496 3.784 1.199.946 1.532 1.267 1.972 1.918 1.574 2.31 1.676 5.421.3 9.368-.689 1.967-1.471 3.617-2.897 6.094-1.06 1.84-2.417 4.506-2.899 5.685-.06.154-.13.277-.153.277-.018 0-.444-.343-.944-.761a100.019 100.019 0 01-9.089-8.611c-10.478-11.29-17.904-24.666-21.747-39.182a89.721 89.721 0 01-2.394-33.616 90.567 90.567 0 016.992-25.74c4.375-9.962 10.394-18.964 18.07-27.016 2.144-2.253 5.07-5.007 7.293-6.882.296-.25.541-.475.541-.497 0-.017-.004-.035-.009-.03-.009 0-.555.149-1.217.33zm48.513 88.335c.046.154-.051.735-.18 1.104a2.426 2.426 0 01-1.686 1.589c-.963.277-1.76.127-2.417-.45-.523-.461-1.236-1.394-1.134-1.486.023-.022 5.13-.836 5.315-.85.041-.004.088.04.102.093z" />
                <path d="M80.562 58.76c-2.685.268-5.14 1.368-7.014 3.146-1.76 1.672-2.862 3.775-3.25 6.213-.107.677-.107 2.275 0 2.983.61 3.956 3.356 7.251 7.217 8.664 1.399.51 2.547.708 4.135.708 1.922 0 3.375-.317 5.047-1.096 1.231-.576 2.116-1.174 3.056-2.072 3.07-2.913 4.143-7.225 2.773-11.145-.255-.735-.87-1.936-1.301-2.548a11.209 11.209 0 00-4.366-3.705 12.328 12.328 0 00-3.565-1.082c-.574-.084-2.172-.119-2.732-.066z" />
              </g>
            </svg>
          </div>
          <nav className="header-container__nav">
            <ul
              className={`header-container__nav__navbar ${
                isOpen ? "open" : ""
              }`}
            >
              {routes.map((el: route) => (
                <li className="navbar-item" onClick={openNavbar} key={el.name}>
                  <NavLink to={el.to}>{el.name}</NavLink>
                </li>
              ))}
            </ul>
          </nav>
          <div
            className={`hamburger-btn ${isOpen ? "open" : ""}`}
            onClick={openNavbar}
          >
            <span className="bar"></span>
            <span className="bar"></span>
            <span className="bar"></span>
          </div>
        </div>
      </header>
      <main className="main">
        <Outlet />
      </main>
    </>
  );
};
